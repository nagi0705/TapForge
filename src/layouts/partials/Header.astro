---
import Logo from "@/components/Logo.astro";
import LanguageSwitcher from "../../components/LanguageSwitcher.astro";
import { IoSearch } from "react-icons/io5";
import { getTranslation, type Language } from "../../lib/i18n";

// Get current language from URL path
const pathname = Astro.url.pathname;
let currentLang: Language = "ja";

// Detect language from URL path
if (pathname.startsWith('/en/') || pathname === '/en') {
  currentLang = "en";
} else if (pathname.startsWith('/zh/') || pathname === '/zh') {
  currentLang = "zh";
} else if (pathname.startsWith('/ko/') || pathname === '/ko') {
  currentLang = "ko";
} else if (pathname.startsWith('/es/') || pathname === '/es') {
  currentLang = "es";
}

// TapForge navigation menu with i18n
const homeUrl = currentLang === "ja" ? "/" : `/${currentLang}/`;
const main = [
  { name: currentLang === "ko" ? "홈" : getTranslation(currentLang, "nav.home"), url: homeUrl },
  { name: currentLang === "ko" ? "특징" : getTranslation(currentLang, "nav.features"), url: "#features" },
  { name: currentLang === "ko" ? "가격" : getTranslation(currentLang, "nav.pricing"), url: "#pricing" },
  {
    name: currentLang === "ko" ? "후기" : getTranslation(currentLang, "nav.testimonials"),
    url: "#testimonials",
  },
  { name: currentLang === "ko" ? "FAQ" : getTranslation(currentLang, "nav.faq"), url: "#faq" },
  {
    name: currentLang === "ko" ? "문의" : getTranslation(currentLang, "nav.contact"),
    url: "https://cor-jp.com/contact/",
  },
];
---

<header class="header pt-6">
  <nav class="navbar container">
    <!-- logo -->
    <div class="order-0 flex-shrink-0">
      <Logo />
    </div>

    <!-- navbar toggler -->
    <input id="nav-toggle" type="checkbox" class="hidden" />
    <label
      id="show-button"
      for="nav-toggle"
      class="order-2 flex cursor-pointer items-center text-black md:order-1 md:hidden"
    >
      <svg class="h-6 fill-current" viewBox="0 0 20 20">
        <title>Menu Open</title>
        <path d="M0 3h20v2H0V3z m0 6h20v2H0V9z m0 6h20v2H0V0z"></path>
      </svg>
    </label>
    <label
      id="hide-button"
      for="nav-toggle"
      class="order-2 hidden cursor-pointer items-center text-black md:order-1"
    >
      <svg class="h-6 fill-current" viewBox="0 0 20 20">
        <title>Menu Close</title>
        <polygon
          points="11 9 22 9 22 11 11 11 11 22 9 22 9 11 -2 11 -2 9 9 9 9 -2 11 -2"
          transform="rotate(45 10 10)"></polygon>
      </svg>
    </label>
    <!-- /navbar toggler -->

    <!-- Navigation Menu -->
    <ul
      id="nav-menu"
      class="navbar-nav order-3 hidden w-full md:order-1 md:flex md:w-auto md:flex-1 md:justify-center md:max-w-lg"
    >
      {
        main.map((menu) => (
          <li class="nav-item">
            <a
              href={menu.url}
              class={`nav-link ${menu.url.startsWith("#") ? "smooth-scroll" : ""}`}
              target={menu.url.startsWith("http") ? "_blank" : undefined}
              rel={
                menu.url.startsWith("http") ? "noopener noreferrer" : undefined
              }
            >
              {menu.name}
            </a>
          </li>
        ))
      }
    </ul>

    <!-- Right side controls -->
    <div class="order-1 flex items-center md:order-2 md:flex-shrink-0">
      <!-- Language Switcher -->
      <div class="mr-2 md:mr-4">
        <LanguageSwitcher currentLang={currentLang} />
      </div>
      <!-- Search (optional for TapForge) -->
      <a
        class="inline-block cursor-pointer p-2 text-lg text-dark transition hover:text-primary md:text-xl"
        href="/search"
        title="search"
        aria-label="search"
      >
        <IoSearch />
      </a>
    </div>
  </nav>
</header>

<script>
  // Smooth scroll functionality for anchor links only
  const smoothScrollLinks = document.querySelectorAll(".smooth-scroll");

  smoothScrollLinks.forEach((link) => {
    link.addEventListener("click", function (e) {
      e.preventDefault();

      const targetId = (e.currentTarget as HTMLAnchorElement).getAttribute(
        "href",
      );
      if (targetId && targetId.startsWith("#")) {
        const targetElement = document.querySelector(targetId);
        if (targetElement) {
          targetElement.scrollIntoView({
            behavior: "smooth",
            block: "start",
          });
        }
      }
    });
  });
</script>
